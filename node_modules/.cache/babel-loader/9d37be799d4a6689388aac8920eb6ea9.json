{"ast":null,"code":"var _jsxFileName = \"/Users/out-belov1-mv/Desktop/fastlist/src/components/TaskItem/TaskItem.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox, Input, Button } from 'antd';\nimport { EditFilled, DeleteFilled } from '@ant-design/icons';\nimport styles from './style.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskItem = ({\n  id,\n  text,\n  date,\n  isCompleted,\n  removeTask,\n  completeTask\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.taskItem,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.switch,\n      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n        value: isCompleted ? checked : 'false'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.input,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        value: text,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.datePickerer,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        value: date,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.btnEdit,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        danger: true,\n        children: /*#__PURE__*/_jsxDEV(EditFilled, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.btnDelete,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: /*#__PURE__*/_jsxDEV(DeleteFilled, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }, this);\n};\n\n_c = TaskItem;\nTaskItem.propTypes = {\n  text: PropTypes.string,\n  date: PropTypes.string,\n  isCompleted: PropTypes.bool,\n  removeTasks: PropTypes.func,\n  id: PropTypes.string\n};\nTaskItem.defaultProps = {\n  text: '',\n  date: '',\n  isCompleted: false,\n  removeTasks: () => {},\n  id: ''\n};\nexport default TaskItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"sources":["/Users/out-belov1-mv/Desktop/fastlist/src/components/TaskItem/TaskItem.jsx"],"names":["React","PropTypes","Checkbox","Input","Button","EditFilled","DeleteFilled","styles","TaskItem","id","text","date","isCompleted","removeTask","completeTask","taskItem","switch","checked","input","datePickerer","btnEdit","btnDelete","propTypes","string","bool","removeTasks","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,MAA1B,QAAwC,MAAxC;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,mBAAzC;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,IAAN;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,WAAlB;AAA+BC,EAAAA,UAA/B;AAA2CC,EAAAA;AAA3C,CAAD,KAA+D;AACxE,sBACI;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACQ,QAAvB;AAAA,4BAEA;AAAK,MAAA,SAAS,EAAER,MAAM,CAACS,MAAvB;AAAA,6BACA,QAAC,QAAD;AAAW,QAAA,KAAK,EAAEJ,WAAW,GAAGK,OAAH,GAAa;AAA1C;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFA,eAKA;AAAK,MAAA,SAAS,EAAEV,MAAM,CAACW,KAAvB;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAER,IAAd;AAAoB,QAAA,QAAQ;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALA,eAQA;AAAK,MAAA,SAAS,EAAEH,MAAM,CAACY,YAAvB;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAER,IAAd;AAAoB,QAAA,QAAQ;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YARA,eAWA;AAAK,MAAA,SAAS,EAAEJ,MAAM,CAACa,OAAvB;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAA,+BAAe,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXA,eAcA;AAAK,MAAA,SAAS,EAAEb,MAAM,CAACc,SAAvB;AAAA,6BACQ,QAAC,MAAD;AAAA,+BAAQ,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YAdA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBP,CArBD;;KAAMb,Q;AAuBNA,QAAQ,CAACc,SAAT,GAAqB;AACjBZ,EAAAA,IAAI,EAAET,SAAS,CAACsB,MADC;AAEjBZ,EAAAA,IAAI,EAAEV,SAAS,CAACsB,MAFC;AAGjBX,EAAAA,WAAW,EAAEX,SAAS,CAACuB,IAHN;AAIjBC,EAAAA,WAAW,EAAExB,SAAS,CAACyB,IAJN;AAKjBjB,EAAAA,EAAE,EAAER,SAAS,CAACsB;AALG,CAArB;AAQAf,QAAQ,CAACmB,YAAT,GAAwB;AACpBjB,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,IAAI,EAAE,EAFc;AAGpBC,EAAAA,WAAW,EAAE,KAHO;AAIpBa,EAAAA,WAAW,EAAE,MAAM,CAAE,CAJD;AAKpBhB,EAAAA,EAAE,EAAE;AALgB,CAAxB;AASA,eAAeD,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox, Input, Button } from 'antd';\nimport { EditFilled, DeleteFilled } from '@ant-design/icons';\n\nimport styles from './style.module.scss'\n\n\nconst TaskItem = ({ id, text, date, isCompleted, removeTask, completeTask }) => {\n        return (\n            <div className={styles.taskItem} >\n\n            <div className={styles.switch}>\n            <Checkbox  value={isCompleted ? checked : 'false'}/>\n           </div>\n            <div className={styles.input}> \n                <Input value={text} readOnly />\n            </div>\n            <div className={styles.datePickerer}>\n                <Input value={date} readOnly />\n            </div>\n            <div className={styles.btnEdit}>\n                <Button danger><EditFilled /></Button>\n            </div>\n            <div className={styles.btnDelete} >\n                    <Button><DeleteFilled /></Button>\n            </div> \n    </div>\n        )\n};\n\nTaskItem.propTypes = {\n    text: PropTypes.string,\n    date: PropTypes.string,\n    isCompleted: PropTypes.bool,\n    removeTasks: PropTypes.func,\n    id: PropTypes.string,\n}\n\nTaskItem.defaultProps = {\n    text: '',\n    date: '',\n    isCompleted: false,\n    removeTasks: () => {},\n    id: '',\n\n}\n\nexport default TaskItem;"]},"metadata":{},"sourceType":"module"}