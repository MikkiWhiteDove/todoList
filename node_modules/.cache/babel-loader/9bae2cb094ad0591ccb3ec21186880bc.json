{"ast":null,"code":"var _jsxFileName = \"/Users/out-belov1-mv/Desktop/fastlist/src/pages/App.jsx\";\nimport './App.scss';\nimport { Provider } from 'react-redux'; // import { createStore, applyMiddleware } from 'redux';\n// import rootReducer from '../Reducers/index';\n\nimport { Home } from './home/index'; // const localStorageMiddleware = ({ getState }) => next => action => {\n//   const res = next(action);\n//   if ([action.type].includes(res.type)) {\n//     localStorage.setItem('data', JSON.stringify(getState().todos));\n//   }\n//   return res;\n// };\n// export const store = createStore(\n//   // rootReducer\n//   , applyMiddleware(localStorageMiddleware));\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/out-belov1-mv/Desktop/fastlist/src/pages/App.jsx"],"names":["Provider","Home","App","store"],"mappings":";AAAA,OAAO,YAAP;AACA,SAASA,QAAT,QAAyB,aAAzB,C,CACA;AACA;;AAGA,SAASC,IAAT,QAAqB,cAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;AAEA,MAAMC,GAAG,GAAG,MAAO;AACjB,sBACE;AAAA,2BACE,QAAC,QAAD;AACA,MAAA,KAAK,EAAEC,KADP;AAAA,6BAGE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;KAAMD,G;AAYN,eAAeA,GAAf","sourcesContent":["import './App.scss';\nimport { Provider } from 'react-redux';\n// import { createStore, applyMiddleware } from 'redux';\n// import rootReducer from '../Reducers/index';\n\n\nimport { Home } from './home/index'\n\n// const localStorageMiddleware = ({ getState }) => next => action => {\n//   const res = next(action);\n//   if ([action.type].includes(res.type)) {\n//     localStorage.setItem('data', JSON.stringify(getState().todos));\n//   }\n//   return res;\n// };\n\n// export const store = createStore(\n//   // rootReducer\n//   , applyMiddleware(localStorageMiddleware));\n\nconst App = ()  => {\n  return (\n    <div>\n      <Provider \n      store={store}\n      >\n        <Home />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}